Server listening at http://localhost:3000
Executing (default): SELECT 1+1 AS result
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Users'
PostgreSQL connected
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_Users_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Users' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "Users" ALTER COLUMN "username" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "username" DROP DEFAULT;ALTER TABLE "Users"  ADD UNIQUE ("username");ALTER TABLE "Users" ALTER COLUMN "username" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Users" ALTER COLUMN "role" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "role" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_Users_role" AS ENUM(''student'', ''lecturer'', ''administrator''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "Users" ALTER COLUMN "role" TYPE "public"."enum_Users_role" USING ("role"::"public"."enum_Users_role");
Executing (default): ALTER TABLE "Users" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Users" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Users" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Users" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Attendances'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Attendances' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Attendances' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "userId" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "userId" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "courseId" SET NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "courseId" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "courseId" TYPE INTEGER;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "timeIn" DROP NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "timeIn" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "timeIn" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "timeOut" DROP NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "timeOut" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "timeOut" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "duration" DROP NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "duration" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "duration" TYPE INTEGER;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "percentageCompleted" DROP NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "percentageCompleted" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "percentageCompleted" TYPE FLOAT;
Executing (default): ALTER TABLE "Attendances" ALTER COLUMN "hoursLeft" DROP NOT NULL;ALTER TABLE "Attendances" ALTER COLUMN "hoursLeft" DROP DEFAULT;ALTER TABLE "Attendances" ALTER COLUMN "hoursLeft" TYPE FLOAT;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Attendances' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Courses'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Courses' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Courses' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "code" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "code" DROP DEFAULT;ALTER TABLE "Courses"  ADD UNIQUE ("code");ALTER TABLE "Courses" ALTER COLUMN "code" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "title" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "title" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "title" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "lecturer" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "lecturer" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "lecturer" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "credits" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "credits" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "credits" TYPE INTEGER;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "hours" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "hours" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "hours" TYPE INTEGER;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "location" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "location" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "location" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "classroom" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "classroom" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "classroom" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "days" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "days" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "days" TYPE VARCHAR(255)[];
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "startTime" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "startTime" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "startTime" TYPE TIME;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "endTime" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "endTime" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "endTime" TYPE TIME;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "totalHours" DROP NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "totalHours" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "totalHours" TYPE INTEGER;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Courses" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Courses" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Courses" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Courses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'CatchupClasses'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'CatchupClasses' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'CatchupClasses' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "courseId" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "courseId" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "courseId" TYPE INTEGER;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "lecturerId" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "lecturerId" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "lecturerId" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "date" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "date" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "date" TYPE DATE;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "startTime" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "startTime" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "startTime" TYPE TIME;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "endTime" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "endTime" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "endTime" TYPE TIME;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "location" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "location" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "location" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "details" DROP NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "details" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "details" TYPE TEXT;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "CatchupClasses" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "CatchupClasses" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "CatchupClasses" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'CatchupClasses' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'Notifications'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'Notifications' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'Notifications' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "Notifications" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "Notifications" ALTER COLUMN "userId" DROP DEFAULT;ALTER TABLE "Notifications" ALTER COLUMN "userId" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "Notifications" ALTER COLUMN "message" SET NOT NULL;ALTER TABLE "Notifications" ALTER COLUMN "message" DROP DEFAULT;ALTER TABLE "Notifications" ALTER COLUMN "message" TYPE TEXT;
Executing (default): ALTER TABLE "Notifications" ALTER COLUMN "read" DROP NOT NULL;ALTER TABLE "Notifications" ALTER COLUMN "read" SET DEFAULT false;ALTER TABLE "Notifications" ALTER COLUMN "read" TYPE BOOLEAN;
Executing (default): ALTER TABLE "Notifications" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "Notifications" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "Notifications" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "Notifications" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "Notifications" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "Notifications" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'Notifications' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'CourseRegistrations'
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'CourseRegistrations' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'CourseRegistrations' AND tc.table_catalog = 'nfc_attendance'
Executing (default): ALTER TABLE "CourseRegistrations" ALTER COLUMN "userId" SET NOT NULL;ALTER TABLE "CourseRegistrations" ALTER COLUMN "userId" DROP DEFAULT;ALTER TABLE "CourseRegistrations" ALTER COLUMN "userId" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "CourseRegistrations" ALTER COLUMN "courseId" SET NOT NULL;ALTER TABLE "CourseRegistrations" ALTER COLUMN "courseId" DROP DEFAULT;ALTER TABLE "CourseRegistrations" ALTER COLUMN "courseId" TYPE INTEGER;
Executing (default): ALTER TABLE "CourseRegistrations" ALTER COLUMN "createdAt" SET NOT NULL;ALTER TABLE "CourseRegistrations" ALTER COLUMN "createdAt" DROP DEFAULT;ALTER TABLE "CourseRegistrations" ALTER COLUMN "createdAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "CourseRegistrations" ALTER COLUMN "updatedAt" SET NOT NULL;ALTER TABLE "CourseRegistrations" ALTER COLUMN "updatedAt" DROP DEFAULT;ALTER TABLE "CourseRegistrations" ALTER COLUMN "updatedAt" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'CourseRegistrations' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Database & tables updated (alter sync)
^C